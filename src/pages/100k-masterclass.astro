---
import Layout from "../layouts/Layout.astro";
---

<Layout
    title="Webinaire Exclusif - Comment j'ai fait +100k‚Ç¨ en 1 mois | Syst√®me Viral"
    description="D√©couvrez la m√©thode exacte pour g√©n√©rer +100k‚Ç¨ en 1 mois avec des vid√©os d'1 minute. Webinaire gratuit avec chat en direct."
    canonical="/100k-masterclass"
>
    <!-- Background effects -->
    <div class="gradient-bg"></div>

    <!-- Page Title -->
    <section class="page-title-section">
        <div class="container">
            <div class="title-badge">
                <span class="badge-dot"></span>
                <span>Session Exclusive</span>
            </div>
            <h1 class="page-title">
                Les <span class="title-highlight">3 secrets</span> pour cr√©er ton
                audience, obtenir tes premiers emails et g√©n√©rer des
                <span class="title-highlight">revenus passifs</span>.
            </h1>
            <p class="title-subtitle">
                Une masterclass d'exception pour transformer ta passion en
                revenus r√©currents.
            </p>
        </div>
    </section>

    <!-- Main Content -->
    <div class="main-container">
        <!-- Left Column: Video + Info -->
        <div class="video-section">
            <div class="video-wrapper">
                <video
                    id="masterclass-video"
                    playsinline
                    preload="metadata"
                    poster="/media/thumbnail-video-presentation.webp"
                >
                    <source
                        src="https://sonnycourt-videos-public.b-cdn.net/VSL-Systeme-Viral-VF.mp4"
                        type="video/mp4"
                    />
                    Votre navigateur ne supporte pas la lecture vid√©o.
                </video>
                <button class="big-play" id="bigPlay" aria-label="Lecture">
                    <svg
                        width="44"
                        height="44"
                        viewBox="0 0 24 24"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path d="M5 3v18l15-9L5 3z" fill="currentColor"></path>
                    </svg>
                </button>
                <div
                    class="custom-controls"
                    id="playerControls"
                    role="group"
                    aria-label="Contr√¥les vid√©o"
                >
                    <button
                        class="control-btn play"
                        id="playPause"
                        aria-label="Lecture/Pause"
                    >
                        <svg
                            class="icon-play"
                            width="18"
                            height="18"
                            viewBox="0 0 24 24"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <path d="M5 3v18l15-9L5 3z" fill="currentColor"
                            ></path>
                        </svg>
                        <svg
                            class="icon-pause"
                            width="18"
                            height="18"
                            viewBox="0 0 24 24"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <path
                                d="M6 4h4v16H6zM14 4h4v16h-4z"
                                fill="currentColor"></path>
                        </svg>
                    </button>

                    <input
                        class="volume"
                        id="volumeSlider"
                        type="range"
                        min="0"
                        max="1"
                        step="0.01"
                        value="1"
                        aria-label="Volume"
                    />
                </div>
                <div class="reactions-overlay" id="reactionsOverlay"></div>
            </div>

            <div class="video-info">
                <div class="video-chapters">
                    <div class="chapter active" data-time="0" data-chapter="0">
                        Intro
                    </div>
                    <div class="chapter" data-time="39" data-chapter="1">
                        Mon exp√©rience
                    </div>
                    <div class="chapter" data-time="138" data-chapter="2">
                        La preuve
                    </div>
                    <div class="chapter" data-time="322" data-chapter="3">
                        Secret #1
                    </div>
                    <div class="chapter" data-time="502" data-chapter="4">
                        Secret #2
                    </div>
                    <div class="chapter" data-time="712" data-chapter="5">
                        Secret #3
                    </div>
                    <div class="chapter" data-time="1011" data-chapter="6">
                        La solution
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Column: Chat (same height as video) -->
        <div class="chat-wrapper">
            <div class="chat-section">
                <!-- Header avec statut -->
                <div class="chat-header">
                    <div class="chat-status">
                        <div class="live-dot"></div>
                        <span>Replay interactif</span>
                    </div>
                    <div class="viewers-count">
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="16"
                            height="16"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            class="viewers-icon"
                        >
                            <path
                                d="M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0"
                            ></path>
                            <circle cx="12" cy="12" r="3"></circle>
                        </svg>
                        <span id="viewerCount">32</span>
                        <span> personnes regardent</span>
                    </div>
                </div>

                <!-- Onglets -->
                <div class="chat-tabs" style="display: none;">
                    <button
                        class="chat-tab active"
                        id="publicTab"
                        data-tab="public"
                    >
                        <span>Chat</span>
                    </button>
                </div>

                <!-- Contenu onglet Discussion publique -->
                <div class="tab-content active" id="publicContent">
                    <div class="chat-messages" id="chatMessages">
                        <div class="system-message join">
                            <span id="welcomeMessage"></span>
                        </div>
                    </div>

                    <div class="chat-input-wrapper">
                        <form class="chat-input-form" id="chatForm">
                            <input
                                type="text"
                                class="chat-input"
                                id="chatInput"
                                placeholder="Posez votre question..."
                                required
                            />
                            <button type="submit" class="chat-send">
                                Envoyer
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Timer Button -->
        <div class="timer-section">
            <button class="timer-button disabled" id="timerButton" disabled>
                <div class="timer-glow"></div>
                <div class="timer-content">
                    <div class="timer-top">
                        <span class="timer-label" id="timerLabel"
                            >ACC√àS LIMIT√â</span
                        >
                    </div>
                    <div class="timer-display">
                        <span class="timer-countdown" id="timerCountdown"
                            >12:00</span
                        >
                    </div>
                    <div class="timer-cta" id="timerCTA">
                        <span>D√©bloquer l'acc√®s</span>
                        <svg
                            width="20"
                            height="20"
                            viewBox="0 0 20 20"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <path
                                d="M7.5 15L12.5 10L7.5 5"
                                stroke="currentColor"
                                stroke-width="2"
                                stroke-linecap="round"
                                stroke-linejoin="round"></path>
                        </svg>
                    </div>
                </div>
            </button>
        </div>
    </div>

    <!-- CTA Popup -->
    <div class="cta-popup" id="ctaPopup">
        <span class="cta-text">üéÅ T√©l√©chargez le guide PDF gratuit</span>
        <button class="cta-button" onclick="handleCTA()">T√âL√âCHARGER</button>
        <button class="cta-close" onclick="closeCTA()">√ó</button>
    </div>
</Layout>

<style>
    /* Variables CSS adapt√©es au branding Syst√®me Viral */
    :root {
        --bg: #0a0a0a;
        --bg-card: rgba(255, 255, 255, 0.02);
        --bg-elevated: rgba(255, 255, 255, 0.05);
        --text: #ffffff;
        --text-secondary: #aaa;
        --text-muted: #888;
        --accent: #00dc82;
        --accent-bright: #00f593;
        --accent-glow: #00dc82;
        --accent-dark: #00b86b;
        --success: #00dc82;
        --border: rgba(255, 255, 255, 0.1);
        --glow: rgba(0, 220, 130, 0.3);
        --danger: #ef4444;
    }

    /* Background effects */
    .gradient-bg {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: #0a0a0a;
        z-index: -1;
    }

    /* Page Title Section */
    .page-title-section {
        background: var(--bg);
        padding: 80px 0 32px;
        text-align: center;
        position: relative;
        overflow: hidden;
    }

    .page-title-section::before {
        content: "";
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 600px;
        height: 400px;
        background: radial-gradient(
            circle,
            rgba(0, 220, 130, 0.1) 0%,
            transparent 70%
        );
        pointer-events: none;
        animation: titleGlow 8s ease-in-out infinite;
    }

    @keyframes titleGlow {
        0%,
        100% {
            opacity: 0.3;
            transform: translateX(-50%) scale(1);
        }
        50% {
            opacity: 0.6;
            transform: translateX(-50%) scale(1.2);
        }
    }

    .title-badge {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 8px 20px;
        background: rgba(0, 220, 130, 0.1);
        border: 1px solid rgba(0, 220, 130, 0.3);
        border-radius: 100px;
        margin-bottom: 32px;
        font-size: 13px;
        font-weight: 600;
        color: var(--accent-bright);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        animation: fadeInDown 0.6s ease;
    }

    .badge-dot {
        width: 8px;
        height: 8px;
        background: var(--accent);
        border-radius: 50%;
        animation: pulse 2s ease infinite;
        box-shadow: 0 0 10px var(--accent);
    }

    @keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .page-title {
        font-size: clamp(28px, 5vw, 48px);
        font-weight: 900;
        line-height: 1.2;
        color: var(--text);
        max-width: 900px;
        margin: 0 auto 24px;
        letter-spacing: -0.02em;
        position: relative;
        z-index: 1;
        animation: fadeInUp 0.8s ease 0.2s both;
        text-shadow: 0 2px 20px rgba(0, 220, 130, 0.2);
    }

    .title-highlight {
        background: linear-gradient(
            135deg,
            var(--accent) 0%,
            var(--accent-bright) 100%
        );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        position: relative;
        font-weight: 900;
        display: inline-block;
    }

    .title-subtitle {
        font-size: 18px;
        color: var(--text-secondary);
        max-width: 600px;
        margin: 0 auto;
        line-height: 1.6;
        animation: fadeInUp 1s ease 0.4s both;
        position: relative;
        z-index: 1;
    }

    @media (max-width: 768px) {
        .page-title {
            font-size: 24px;
            padding: 0 16px;
            margin-bottom: 16px;
        }

        .page-title-section {
            padding: 60px 0 32px;
        }

        .title-badge {
            font-size: 11px;
            padding: 6px 16px;
            margin-bottom: 24px;
        }

        .title-subtitle {
            font-size: 16px;
            padding: 0 16px;
        }
    }

    .live-dot {
        width: 8px;
        height: 8px;
        background: var(--accent);
        border-radius: 50%;
        animation: pulse 2s ease infinite;
    }

    @keyframes pulse {
        0%,
        100% {
            opacity: 1;
            box-shadow: 0 0 0 0 var(--accent);
        }
        50% {
            opacity: 0.7;
            box-shadow: 0 0 0 8px rgba(16, 185, 129, 0);
        }
    }

    /* Main Layout */
    .main-container {
        max-width: 1400px;
        margin: 40px auto 0;
        padding: 24px;
        display: grid;
        grid-template-columns: 1fr 380px;
        grid-template-areas:
            "video chat"
            "video timer";
        gap: 24px;
        align-items: start;
    }

    /* Video Section */
    .video-section {
        grid-area: video;
        display: flex;
        flex-direction: column;
        gap: 20px;
        align-items: start;
    }

    .video-wrapper {
        background: var(--bg-card);
        border: 1px solid var(--border);
        border-radius: 16px;
        overflow: hidden;
        position: relative;
        width: 100%;
        aspect-ratio: 16/9;
    }

    .video-wrapper iframe {
        width: 100%;
        height: 100%;
        border: none;
    }

    .video-wrapper video {
        width: 100%;
        height: 100%;
        display: block;
        background: #000;
    }

    .big-play {
        position: absolute;
        inset: 0;
        margin: auto;
        width: 72px;
        height: 72px;
        border-radius: 50%;
        background: radial-gradient(
            closest-side,
            var(--accent),
            var(--accent-dark)
        );
        color: #0a0a0a;
        display: grid;
        place-items: center;
        border: 1px solid var(--border);
        box-shadow:
            0 0 0 6px rgba(0, 220, 130, 0.15),
            0 10px 30px rgba(0, 0, 0, 0.4);
        cursor: pointer;
        transition:
            transform 0.15s ease,
            box-shadow 0.15s ease;
        z-index: 5;
    }
    .big-play:hover {
        transform: scale(1.04);
        box-shadow:
            0 0 0 8px rgba(0, 220, 130, 0.18),
            0 12px 36px rgba(0, 0, 0, 0.45);
    }
    .big-play.hidden {
        display: none;
    }
    .big-play svg {
        /* slight optical centering to the right */
        transform: translateX(1px);
        pointer-events: none;
    }

    .custom-controls {
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 10px 12px;
        background: linear-gradient(
            to top,
            rgba(10, 10, 10, 0.9),
            rgba(10, 10, 10, 0.3) 60%,
            rgba(10, 10, 10, 0)
        );
        /* Remove hairline between video and controls */
        border-top: none;
        z-index: 6;
    }
    .control-btn {
        color: var(--text);
        background: transparent;
        border: 1px solid var(--border);
        border-radius: 8px;
        padding: 8px;
        display: grid;
        place-items: center;
        cursor: pointer;
    }
    .control-btn:hover {
        color: var(--accent);
        border-color: rgba(0, 220, 130, 0.4);
    }
    .control-btn .icon-pause {
        display: none;
    }
    .is-playing .control-btn.play .icon-play {
        display: none;
    }
    .is-playing .control-btn.play .icon-pause {
        display: block;
    }
    .mute-active .control-btn.mute .icon-volume {
        display: none;
    }
    .mute-active .control-btn.mute .icon-muted {
        display: block;
    }

    /* Progress/time removed to prevent scrubbing */

    .volume {
        width: 90px;
        appearance: none;
        height: 6px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 999px;
        cursor: pointer;
    }
    .volume::-webkit-slider-thumb {
        appearance: none;
        width: 14px;
        height: 14px;
        border-radius: 50%;
        background: var(--accent);
        box-shadow: 0 0 0 4px rgba(0, 220, 130, 0.18);
        border: none;
    }
    .volume::-moz-range-thumb {
        width: 14px;
        height: 14px;
        border: none;
        border-radius: 50%;
        background: var(--accent);
    }

    @media (max-width: 768px) {
        .custom-controls {
            gap: 8px;
            padding: 8px;
        }
        /* time removed on mobile too */
        .volume {
            width: 70px;
        }
    }

    /* Reactions overlay */
    .reactions-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        pointer-events: none;
        z-index: 10;
    }

    .floating-reaction {
        position: absolute;
        font-size: 24px;
        animation: floatUp 3s ease-out forwards;
        pointer-events: none;
    }

    @keyframes floatUp {
        0% {
            opacity: 0;
            transform: translateY(0) scale(0);
        }
        20% {
            opacity: 1;
            transform: translateY(-20px) scale(1);
        }
        100% {
            opacity: 0;
            transform: translateY(-100px) scale(0.5);
        }
    }

    /* Video Info */
    .video-info {
        background: var(--bg-card);
        border: 1px solid var(--border);
        border-radius: 12px;
        padding: 20px;
    }

    .video-title {
        font-size: 20px;
        font-weight: 700;
        margin-bottom: 20px;
        letter-spacing: -0.5px;
        color: var(--text);
    }

    /* Timer Section */
    .timer-section {
        grid-area: timer;
        width: 100%;
    }

    .timer-button {
        width: 100%;
        background: linear-gradient(
            135deg,
            rgba(0, 220, 130, 0.03) 0%,
            rgba(0, 220, 130, 0.08) 50%,
            rgba(0, 220, 130, 0.03) 100%
        );
        border: 2px solid rgba(0, 220, 130, 0.3);
        border-radius: 24px;
        padding: 32px 40px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        backdrop-filter: blur(20px);
        box-shadow: 0 8px 32px rgba(0, 220, 130, 0.15);
    }

    .timer-glow {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 200%;
        height: 200%;
        background: radial-gradient(
            circle,
            rgba(0, 220, 130, 0.15) 0%,
            transparent 70%
        );
        animation: glowPulse 3s ease-in-out infinite;
        pointer-events: none;
    }

    @keyframes glowPulse {
        0%,
        100% {
            opacity: 0.5;
            transform: translate(-50%, -50%) scale(1);
        }
        50% {
            opacity: 1;
            transform: translate(-50%, -50%) scale(1.1);
        }
    }

    .timer-content {
        position: relative;
        z-index: 1;
        text-align: center;
        width: 100%;
    }

    .timer-top {
        margin-bottom: 12px;
    }

    .timer-label {
        font-size: 13px;
        font-weight: 800;
        color: var(--text-secondary);
        text-transform: uppercase;
        letter-spacing: 3px;
        transition: all 0.3s ease;
        display: inline-block;
    }

    .timer-display {
        margin-bottom: 20px;
    }

    .timer-countdown {
        font-size: 56px;
        font-weight: 900;
        font-family: "SF Mono", "Monaco", "Courier New", monospace;
        color: #fff;
        letter-spacing: 4px;
        transition: all 0.3s ease;
        text-shadow: 0 0 40px rgba(0, 220, 130, 0.5);
        display: block;
        line-height: 1;
    }

    /* Style affin√© pour l'√©tat d√©bloqu√© (plus en phase avec le branding) */
    .timer-button.unlocked .timer-countdown {
        font-family: inherit; /* revenir √† la typo principale du site */
        font-weight: 800;
        /* taille responsive pour √©viter le d√©passement */
        font-size: clamp(28px, 6vw, 44px);
        letter-spacing: 1px;
        background: linear-gradient(
            135deg,
            var(--accent) 0%,
            var(--accent-bright) 100%
        );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        text-fill-color: transparent;
        color: transparent;
        text-shadow: 0 0 24px rgba(0, 220, 130, 0.45);
        white-space: nowrap;
        overflow: hidden;
    }

    .timer-button.unlocked .timer-label {
        color: var(--accent-bright);
        opacity: 0.95;
    }

    .timer-cta {
        display: inline-flex;
        align-items: center;
        gap: 12px;
        padding: 16px 32px;
        background: linear-gradient(
            135deg,
            var(--accent) 0%,
            var(--accent-bright) 100%
        );
        color: #000;
        border-radius: 100px;
        font-size: 16px;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 20px rgba(0, 220, 130, 0.3);
    }

    .timer-cta svg {
        transition: all 0.3s ease;
    }

    /* Hover states - actif seulement */
    .timer-button:not(.disabled):hover {
        transform: translateY(-8px);
        border-color: var(--accent-bright);
        background: linear-gradient(
            135deg,
            rgba(0, 220, 130, 0.08) 0%,
            rgba(0, 220, 130, 0.15) 50%,
            rgba(0, 220, 130, 0.08) 100%
        );
        box-shadow: 0 20px 60px rgba(0, 220, 130, 0.4);
    }

    .timer-button:not(.disabled):hover .timer-countdown {
        text-shadow: 0 0 60px rgba(0, 220, 130, 0.8);
    }

    .timer-button:not(.disabled):hover .timer-cta {
        background: linear-gradient(
            135deg,
            var(--accent-bright) 0%,
            var(--accent-glow) 100%
        );
        box-shadow: 0 8px 32px rgba(0, 220, 130, 0.5);
        transform: scale(1.05);
    }

    .timer-button:not(.disabled):hover .timer-cta svg {
        transform: translateX(4px);
    }

    .timer-button:not(.disabled):active {
        transform: translateY(-4px) scale(0.98);
    }

    /* √âtat d√©sactiv√© - Plus visible */
    .timer-button.disabled {
        cursor: not-allowed;
        background: linear-gradient(
            135deg,
            rgba(255, 255, 255, 0.03) 0%,
            rgba(255, 255, 255, 0.06) 50%,
            rgba(255, 255, 255, 0.03) 100%
        );
        border: 2px solid rgba(255, 255, 255, 0.15);
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    }

    .timer-button.disabled .timer-glow {
        display: none;
    }

    .timer-button.disabled .timer-countdown {
        color: rgba(255, 255, 255, 0.7);
        text-shadow: none;
        font-size: 36px;
    }

    .timer-button.disabled .timer-label {
        color: rgba(255, 255, 255, 0.6);
    }

    .timer-button.disabled .timer-cta {
        opacity: 0.5;
        background: rgba(255, 255, 255, 0.08);
        color: rgba(255, 255, 255, 0.5);
        border: 1px solid rgba(255, 255, 255, 0.1);
        box-shadow: none;
    }

    .video-chapters {
        display: flex;
        gap: 12px;
        flex-wrap: wrap;
    }

    .chapter {
        padding: 8px 16px 12px;
        background: var(--bg-elevated);
        border: 1px solid var(--border);
        border-radius: 10px;
        font-size: 13px;
        color: var(--text-secondary);
        cursor: pointer;
        transition: all 0.4s ease;
        position: relative;
        overflow: hidden;
        font-weight: 500;
    }

    .chapter::before {
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 0%;
        background: linear-gradient(
            90deg,
            rgba(0, 220, 130, 0.15) 0%,
            rgba(0, 220, 130, 0.08) 100%
        );
        transition: width 0.3s ease;
        z-index: -1;
    }

    /* Barre de progression en bas du chapitre actif */
    .chapter::after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        height: 3px;
        width: 0%;
        background: linear-gradient(
            90deg,
            var(--accent) 0%,
            var(--accent-bright) 100%
        );
        box-shadow: 0 0 10px rgba(0, 220, 130, 0.6);
        transition: none;
        opacity: 0;
    }

    .chapter:hover {
        border-color: var(--accent);
        color: var(--accent);
        transform: translateY(-2px);
    }

    .chapter.active {
        background: rgba(0, 220, 130, 0.15);
        border-color: var(--accent);
        color: var(--accent-bright);
        box-shadow: 0 0 20px rgba(0, 220, 130, 0.3);
        font-weight: 600;
    }

    .chapter.active::before {
        width: 100%;
        animation: shimmer 2s ease-in-out infinite;
    }

    .chapter.active::after {
        opacity: 1;
        width: var(--chapter-progress, 0%);
    }

    @keyframes shimmer {
        0%,
        100% {
            opacity: 1;
        }
        50% {
            opacity: 0.5;
        }
    }

    .chapter.completed {
        background: rgba(0, 220, 130, 0.05);
        border-color: rgba(0, 220, 130, 0.3);
        color: var(--accent);
    }

    .chapter.completed::after {
        opacity: 0 !important;
        width: 0 !important;
    }

    /* Chat Wrapper */
    .chat-wrapper {
        grid-area: chat;
        position: sticky;
        top: 100px;
        height: fit-content;
    }

    /* Chat Section */
    .chat-section {
        background: var(--bg-card);
        border: 1px solid var(--border);
        border-radius: 16px;
        display: flex;
        flex-direction: column;
        height: 520px;
        max-height: 520px;
        overflow: hidden;
    }

    /* Header du chat */
    .chat-header {
        padding: 12px 20px;
        border-bottom: 1px solid var(--border);
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 16px;
    }

    .chat-status {
        display: flex;
        align-items: center;
        gap: 6px;
        font-size: 12px;
        color: var(--text-secondary);
    }

    .viewers-count {
        display: flex;
        align-items: center;
        gap: 6px;
        font-size: 12px;
        color: var(--text-secondary);
    }

    .viewers-icon {
        font-size: 14px;
        width: 16px;
        height: 16px;
        color: var(--accent-bright);
    }

    #viewerCount {
        font-weight: 700;
        color: var(--accent-bright);
        transition: all 0.3s ease;
    }

    @keyframes countPulse {
        0%,
        100% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.1);
        }
    }

    #viewerCount.updating {
        animation: countPulse 0.5s ease;
    }

    /* Onglets du chat */
    .chat-tabs {
        display: flex;
        border-bottom: 1px solid var(--border);
        background: var(--bg);
    }

    .chat-tab {
        flex: 1;
        padding: 14px 16px;
        background: transparent;
        border: none;
        border-bottom: 2px solid transparent;
        color: var(--text-secondary);
        font-size: 13px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        position: relative;
    }

    .chat-tab:hover {
        background: rgba(255, 255, 255, 0.03);
        color: var(--text);
    }

    .chat-tab.active {
        color: var(--accent-bright);
        border-bottom-color: var(--accent);
        background: rgba(0, 220, 130, 0.05);
    }

    .tab-notification {
        position: absolute;
        top: 8px;
        right: 8px;
        width: 20px;
        height: 20px;
        background: #ef4444;
        color: white;
        border-radius: 50%;
        font-size: 11px;
        font-weight: 700;
        display: flex;
        align-items: center;
        justify-content: center;
        animation: notifPulse 2s ease-in-out infinite;
        box-shadow: 0 0 10px rgba(239, 68, 68, 0.5);
    }

    .tab-notification.hidden {
        display: none;
    }

    @keyframes notifPulse {
        0%,
        100% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.1);
        }
    }

    /* Contenu des onglets */
    .tab-content {
        display: none;
        flex-direction: column;
        flex: 1;
        overflow: hidden;
    }

    .tab-content.active {
        display: flex;
    }

    /* Header de l'onglet IA */
    .ai-header {
        padding: 20px;
        background: linear-gradient(
            135deg,
            rgba(0, 220, 130, 0.1) 0%,
            rgba(0, 220, 130, 0.05) 100%
        );
        border-bottom: 1px solid rgba(0, 220, 130, 0.3);
        display: flex;
        align-items: center;
        gap: 16px;
    }

    .ai-avatar-large {
        width: 56px;
        height: 56px;
        background: linear-gradient(
            135deg,
            var(--accent) 0%,
            var(--accent-bright) 100%
        );
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 28px;
        box-shadow: 0 0 30px rgba(0, 220, 130, 0.5);
        animation: avatarGlow 2s ease-in-out infinite;
    }

    @keyframes avatarGlow {
        0%,
        100% {
            box-shadow: 0 0 30px rgba(0, 220, 130, 0.5);
        }
        50% {
            box-shadow: 0 0 40px rgba(0, 220, 130, 0.7);
        }
    }

    .ai-title {
        flex: 1;
    }

    .ai-name-large {
        font-size: 16px;
        font-weight: 700;
        color: var(--accent-bright);
        margin-bottom: 4px;
    }

    .ai-badge-live {
        display: inline-block;
        padding: 3px 8px;
        background: rgba(220, 38, 38, 0.15);
        color: #ef4444;
        border: 1px solid rgba(220, 38, 38, 0.3);
        border-radius: 6px;
        font-size: 9px;
        font-weight: 800;
        letter-spacing: 0.5px;
        animation: livePulse 2s ease-in-out infinite;
    }

    @keyframes livePulse {
        0%,
        100% {
            opacity: 1;
        }
        50% {
            opacity: 0.7;
        }
    }

    .chat-messages {
        flex: 1;
        overflow-y: auto;
        padding: 20px;
        display: flex;
        flex-direction: column;
        gap: 16px;
    }

    .chat-messages::-webkit-scrollbar {
        width: 6px;
    }

    .chat-messages::-webkit-scrollbar-track {
        background: var(--bg-elevated);
    }

    .chat-messages::-webkit-scrollbar-thumb {
        background: var(--border);
        border-radius: 3px;
    }

    .chat-messages::-webkit-scrollbar-thumb:hover {
        background: var(--text-muted);
    }

    .chat-message {
        animation: slideIn 0.3s ease;
    }

    @keyframes slideIn {
        from {
            opacity: 0;
            transform: translateX(-10px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    .message-header {
        display: flex;
        align-items: baseline;
        gap: 8px;
    }

    .message-author {
        font-size: 13px;
        font-weight: 600;
        margin-bottom: 0;
        display: flex;
        align-items: center;
        gap: 6px;
        color: var(--accent-bright);
    }

    /* Couleurs coh√©rentes avec le style vert n√©on du site */
    .message-author.color-1 {
        color: #00dc82 !important; /* Accent principal */
    }
    .message-author.color-2 {
        color: #00f593 !important; /* Accent bright */
    }
    .message-author.color-3 {
        color: #10b981 !important; /* Emerald */
    }
    .message-author.color-4 {
        color: #34d399 !important; /* Emerald light */
    }
    .message-author.color-5 {
        color: #6ee7b7 !important; /* Emerald lighter */
    }
    .message-author.color-6 {
        color: #14b8a6 !important; /* Teal */
    }
    .message-author.color-7 {
        color: #2dd4bf !important; /* Teal light */
    }
    .message-author.color-8 {
        color: #5eead4 !important; /* Teal lighter */
    }
    .message-author.color-9 {
        color: #22c55e !important; /* Green */
    }
    .message-author.color-10 {
        color: #4ade80 !important; /* Green light */
    }
    .message-author.color-11 {
        color: #86efac !important; /* Green lighter */
    }
    .message-author.color-12 {
        color: #06b6d4 !important; /* Cyan */
    }
    .message-author.color-13 {
        color: #22d3ee !important; /* Cyan light */
    }
    .message-author.color-14 {
        color: #67e8f9 !important; /* Cyan lighter */
    }
    .message-author.color-15 {
        color: #0891b2 !important; /* Cyan dark */
    }
    .message-author.color-16 {
        color: #84cc16 !important; /* Lime */
    }
    .message-author.color-17 {
        color: #a3e635 !important; /* Lime light */
    }
    .message-author.color-18 {
        color: #bef264 !important; /* Lime lighter */
    }
    .message-author.color-19 {
        color: #00b86b !important; /* Accent dark */
    }
    .message-author.color-20 {
        color: #10b981 !important; /* Emerald variant */
    }
    .message-author.color-user {
        color: var(--accent) !important;
    }

    .message-badge {
        padding: 3px 8px;
        background: linear-gradient(
            135deg,
            rgba(0, 220, 130, 0.2) 0%,
            rgba(0, 245, 147, 0.15) 100%
        );
        color: var(--accent-bright);
        border: 1px solid rgba(0, 220, 130, 0.3);
        border-radius: 6px;
        font-size: 9px;
        font-weight: 800;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        box-shadow: 0 0 10px rgba(0, 220, 130, 0.2);
        animation: badgePulse 2s ease-in-out infinite;
    }

    @keyframes badgePulse {
        0%,
        100% {
            box-shadow: 0 0 10px rgba(0, 220, 130, 0.2);
        }
        50% {
            box-shadow: 0 0 15px rgba(0, 220, 130, 0.4);
        }
    }

    .message-content {
        font-size: 14px;
        color: var(--text-secondary);
        line-height: 1.5;
        font-weight: 400;
    }

    /* System messages */
    .system-message {
        text-align: center;
        padding: 8px;
        background: var(--bg-elevated);
        border-radius: 8px;
        font-size: 12px;
        color: var(--text-muted);
        font-style: italic;
    }

    .system-message.join {
        color: var(--accent);
        background: rgba(16, 185, 129, 0.1);
    }

    /* Chat Input */
    .chat-input-wrapper {
        padding: 16px;
        border-top: 1px solid var(--border);
    }

    .chat-input-form {
        display: flex;
        gap: 8px;
    }

    .chat-input {
        flex: 1;
        padding: 10px 16px;
        background: var(--bg);
        border: 1px solid var(--border);
        border-radius: 8px;
        color: var(--text);
        font-size: 14px;
        font-family: inherit;
        transition: all 0.2s ease;
    }

    .chat-input:focus {
        outline: none;
        border-color: var(--accent);
        box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
    }

    .chat-input::placeholder {
        color: var(--text-muted);
    }

    .chat-send {
        padding: 10px 20px;
        background: var(--accent);
        color: var(--bg);
        border: none;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .chat-send:hover {
        background: var(--accent-bright);
        transform: translateY(-1px);
    }

    /* CTA Popup */
    .cta-popup {
        position: fixed;
        bottom: 24px;
        left: 50%;
        transform: translateX(-50%) translateY(200px);
        background: linear-gradient(
            135deg,
            var(--accent) 0%,
            var(--accent-dark) 100%
        );
        padding: 16px 24px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        gap: 16px;
        box-shadow: 0 10px 40px rgba(16, 185, 129, 0.4);
        z-index: 200;
        transition: transform 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .cta-popup.show {
        transform: translateX(-50%) translateY(0);
    }

    .cta-text {
        color: var(--bg);
        font-weight: 600;
        font-size: 14px;
    }

    .cta-button {
        padding: 8px 16px;
        background: var(--bg);
        color: var(--accent);
        border: none;
        border-radius: 8px;
        font-weight: 700;
        cursor: pointer;
        text-transform: uppercase;
        font-size: 12px;
        letter-spacing: 0.5px;
    }

    .cta-close {
        width: 24px;
        height: 24px;
        background: rgba(0, 0, 0, 0.2);
        border: none;
        border-radius: 50%;
        color: var(--bg);
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    /* Responsive */
    /* Tablette et desktop moyen (769px - 1024px) */
    @media (max-width: 1024px) {
        .main-container {
            grid-template-columns: 1fr;
            grid-template-areas:
                "video"
                "timer"
                "chat";
            gap: 24px;
        }

        .chat-wrapper {
            position: static;
        }

        .chat-section {
            height: 520px;
        }
    }

    /* Mobile (‚â§768px) */
    @media (max-width: 768px) {
        .main-container {
            padding: 16px;
            margin-top: 24px;
            grid-template-areas:
                "video"
                "timer"
                "chat";
            gap: 20px;
        }

        .video-title {
            font-size: 18px;
        }

        .chapter {
            font-size: 12px;
            padding: 6px 12px 10px;
        }

        .timer-button {
            padding: 28px 24px;
        }

        .timer-label {
            font-size: 11px;
            letter-spacing: 2px;
        }

        .timer-countdown {
            font-size: 48px;
            letter-spacing: 4px;
        }

        .timer-display {
            margin-bottom: 20px;
        }

        .timer-cta {
            padding: 14px 28px;
            font-size: 14px;
        }

        .timer-cta svg {
            width: 18px;
            height: 18px;
        }

        .chat-tab {
            font-size: 12px;
            padding: 12px 12px;
        }

        .ai-avatar-large {
            width: 48px;
            height: 48px;
            font-size: 24px;
        }

        .ai-name-large {
            font-size: 14px;
        }

        .ai-header {
            padding: 16px;
        }

        .chat-header {
            flex-wrap: wrap;
            padding: 12px 16px;
        }

        .viewers-count {
            font-size: 11px;
            margin-top: 4px;
            width: 100%;
            justify-content: center;
        }
    }
</style>

<script>
    // Removed seed messages: only timed messages provided by owner are used

    // Chat functions
    const chatMessages = document.getElementById("chatMessages");

    // R√©cup√©rer le pr√©nom de l'utilisateur depuis localStorage
    const userFirstName = localStorage.getItem("userFirstName") || "Vous";

    // Display initial messages on load
    window.addEventListener("DOMContentLoaded", () => {
        // Message de bienvenue personnalis√©
        const welcomeMessage = document.getElementById("welcomeMessage");
        if (welcomeMessage) {
            if (userFirstName !== "Vous") {
                welcomeMessage.textContent = `Bienvenue ${userFirstName} ! La session a commenc√©`;
            } else {
                welcomeMessage.textContent = "La session a commenc√©";
            }
        }

        // No default chat messages injected

        // Initialize timer
        initializeTimer();

        // Initialize progress bar
        initializeProgressBar();

        // Initialize viewers count
        initializeViewerCount();
    });

    // Timed chat messages synchronized with the video
    const timedMessages: Array<{ t: number; a: string; m: string }> = [
        { t: 1, a: "Julien", m: "üî•" },
        { t: 1, a: "Marie", m: "salut" },
        { t: 1, a: "Thomas", m: "yo" },
        { t: 3, a: "Sophie", m: "cc" },
        { t: 5, a: "Lucas", m: "üëã" },
        { t: 8, a: "Emma", m: "‚ù§Ô∏è" },
        { t: 8, a: "Nico", m: "hey" },
        { t: 8, a: "Alex", m: "üëÄ" },
        { t: 11, a: "Clara", m: "bonjour" },
        { t: 14, a: "David", m: "üöÄ" },
        { t: 14, a: "Lina", m: "‚ú®" },

        { t: 17, a: "Pierre", m: "100k???" },
        { t: 17, a: "Max", m: "wtf" },
        { t: 17, a: "Julie", m: "üò±" },
        { t: 18, a: "Sarah", m: "serieux la?" },
        { t: 20, a: "Kevin", m: "lol" },
        { t: 20, a: "Tom", m: "ü§î" },
        { t: 21, a: "L√©a", m: "c'est une blague?" },
        { t: 24, a: "Manu", m: "fake" },
        { t: 24, a: "C√©line", m: "üí∞üí∞" },
        { t: 26, a: "Romain", m: "impossible mdr" },
        { t: 28, a: "Lisa", m: "üëÄüëÄüëÄ" },
        { t: 28, a: "Mehdi", m: "n'importe quoi" },

        { t: 31, a: "Anna", m: "attends quoi" },
        { t: 31, a: "Chris", m: "ü§Ø" },
        { t: 33, a: "Jade", m: "il ment c sur" },
        { t: 35, a: "Bruno", m: "üß¢" },
        { t: 35, a: "Nadia", m: "wow" },
        { t: 35, a: "Paul", m: "j'y crois pas" },
        { t: 36, a: "Melissa", m: "QUOI" },
        { t: 36, a: "Hugo", m: "il delire" },
        { t: 39, a: "Camille", m: "mytho" },
        { t: 39, a: "Enzo", m: "üí∏" },
        { t: 42, a: "Nina", m: "bon j'ecoute" },

        { t: 45, a: "Sam", m: "moi j'ai 0 followers" },
        { t: 45, a: "Laura", m: "pareil" },
        { t: 47, a: "Th√©o", m: "üëç" },
        { t: 49, a: "Chlo√©", m: "ok interessant" },
        { t: 49, a: "Noah", m: "pas montrer ma tete jpp" },
        { t: 50, a: "In√®s", m: "parfait ca" },
        { t: 53, a: "Loic", m: "üí™" },
        { t: 53, a: "Eva", m: "on verra bien" },

        { t: 56, a: "Mika", m: "au moins il dit pas methode magique" },
        { t: 56, a: "Rose", m: "üéØ" },
        { t: 58, a: "Fred", m: "ca change" },
        { t: 60, a: "Amina", m: "honete au moins" },
        { t: 62, a: "Kylian", m: "üëè" },
        { t: 62, a: "Zo√©", m: "respect" },
        { t: 62, a: "Marc", m: "‚úÖ" },

        { t: 65, a: "Alice", m: "ptdr c'est ma vie ca" },
        { t: 65, a: "Tony", m: "grave" },
        { t: 65, a: "Maya", m: "je me leve pour rien" },
        { t: 68, a: "L√©o", m: "trop vrai..." },
        { t: 68, a: "Julia", m: "üò¢" },
        { t: 70, a: "Karim", m: "vivement vendredi tt les jours" },
        { t: 73, a: "Lou", m: "chui mort de fatigue h24" },
        { t: 73, a: "Dylan", m: "üíî" },
        { t: 73, a: "Elsa", m: "help" },

        { t: 76, a: "Yasmine", m: "üòî" },
        { t: 78, a: "Nathan", m: "on est des esclaves modernes" },
        { t: 78, a: "Manon", m: "tellement" },
        { t: 80, a: "Ryan", m: "juste un numero au final" },
        { t: 82, a: "Sofia", m: "üíØ" },
        { t: 82, a: "Adam", m: "real" },
        { t: 82, a: "Lola", m: "ca fait mal" },

        { t: 85, a: "Vincent", m: "il a tout plaqu√© le fou" },
        { t: 85, a: "Iris", m: "balls of steel" },
        { t: 87, a: "Oscar", m: "üò±" },
        { t: 89, a: "Nora", m: "joserai jamais perso" },
        { t: 89, a: "Axel", m: "gros respect" },
        { t: 91, a: "Luna", m: "8 ans de youtube??" },
        { t: 91, a: "Gabriel", m: "aie" },
        { t: 93, a: "Alicia", m: "ca fait beaucoup" },

        { t: 95, a: "Victor", m: "il a du morfler" },
        { t: 97, a: "Mia", m: "üôè" },
        { t: 97, a: "Louis", m: "1 semaine pour une video pfff" },
        { t: 100, a: "Jade", m: "abus√©" },
        { t: 102, a: "Ben", m: "au moins il avait les vues lui" },
        { t: 102, a: "Olivia", m: "ouais mais 0 thune" },
        { t: 104, a: "Jules", m: "ca craint" },
        { t: 104, a: "Celia", m: "üòì" },

        { t: 107, a: "Antoine", m: "dormir c'est surfait de toute facon" },
        { t: 107, a: "Sara", m: "üò¥" },
        { t: 110, a: "Remi", m: "il bossait plus qu'avant mdrrr" },
        { t: 112, a: "Leila", m: "l'ironie" },
        { t: 112, a: "Tim", m: "üíÄ" },
        { t: 114, a: "Elena", m: "sad" },

        { t: 117, a: "Paolo", m: "ah il parle des shorts" },
        { t: 117, a: "Amy", m: "tiktok berk" },
        { t: 119, a: "Simon", m: "c'est pour les gosses non?" },
        { t: 119, a: "Fatima", m: "moi j'aime bien" },
        { t: 119, a: "Dan", m: "üëÄ" },
        { t: 122, a: "Charlotte", m: "bah si ca marche..." },
        { t: 124, a: "Yann", m: "les experts disent nimporte quoi" },
        { t: 124, a: "Marine", m: "comme dab" },
        { t: 126, a: "Julien", m: "prouve nous alors" },

        { t: 129, a: "Lucie", m: "c'est quoi cette histoire de manifestation" },
        { t: 129, a: "Alex", m: "üòÇ" },
        { t: 131, a: "Thomas", m: "niche de ouf" },
        { t: 133, a: "Sophie", m: "jamais entendu parler" },
        { t: 133, a: "Emma", m: "et il a fait 115k avec ca??" },
        { t: 135, a: "Max", m: "IMPOSSIBLE" },
        { t: 135, a: "Pierre", m: "üòµ" },
        { t: 135, a: "Marie", m: "attends j'ai mal compris la" },
        { t: 138, a: "Lucas", m: "200 balles la formation cest tout?" },

        { t: 140, a: "Clara", m: "mais comment il a fait autant de ventes" },
        { t: 140, a: "David", m: "ü§Øü§Ø" },
        { t: 142, a: "Kevin", m: "bah si ca marche dans ce truc chelou" },
        { t: 144, a: "Laura", m: "ca peut marcher partout en fait" },
        { t: 144, a: "Nina", m: "pas con" },
        { t: 146, a: "Hugo", m: "jsuis dans le fitness ca peut le faire" },
        { t: 148, a: "Paul", m: "crypto ca doit cartonner" },
        { t: 148, a: "Lisa", m: "üí°" },

        { t: 151, a: "Th√©o", m: "pas besoin detre connu alors" },
        { t: 151, a: "Enzo", m: "üëå" },
        { t: 153, a: "Manu", m: "il gagne plus qu'un medecin lol" },
        { t: 155, a: "Julie", m: "10k le medecin" },
        { t: 155, a: "Sam", m: "chaud" },
        { t: 157, a: "Tom", m: "üî•üî•" },

        { t: 160, a: "L√©a", m: "montre nous les preuves stp" },
        { t: 160, a: "Chris", m: "üëÄ" },
        { t: 162, a: "Bruno", m: "ah voila les screens" },
        { t: 162, a: "Anna", m: "putain c'est vrai" },
        { t: 164, a: "Mehdi", m: "95k + 28k echelonn√©" },
        { t: 164, a: "Jade", m: "üò±" },
        { t: 166, a: "Rose", m: "ca fait bien 115k" },

        { t: 168, a: "Fred", m: "meme apres les remboursements il dit" },
        { t: 170, a: "Noah", m: "wow" },
        { t: 170, a: "Chlo√©", m: "ok la il a mon attention" },
        { t: 172, a: "Maya", m: "j'y croyais pas mais la..." },
        { t: 172, a: "Tony", m: "üéØ" },
        { t: 174, a: "Alice", m: "donc pas de youtube long?" },

        { t: 176, a: "Loic", m: "que tiktok et insta alors" },
        { t: 176, a: "Eva", m: "+ fb apparemment" },
        { t: 178, a: "Marc", m: "il a fait qu'une video youtube normal" },
        { t: 180, a: "Zo√©", m: "et ca a rien chang√© au final" },
        { t: 180, a: "Ryan", m: "les shorts ca tue alors" },
        { t: 180, a: "Mika", m: "üöÄ" },
    ];
    let timedCursor = 0;

    // Timer functionality
    function initializeTimer() {
        let timeLeft = 5; // 5 secondes pour test (au lieu de 12 * 60)
        const timerElement = document.getElementById("timerCountdown");
        const timerButton = document.getElementById("timerButton");
        const timerLabel = document.getElementById("timerLabel");

        if (!timerElement || !timerButton || !timerLabel) return;

        const updateTimer = () => {
            const minutes = Math.floor(timeLeft / 60);
            const seconds = timeLeft % 60;

            timerElement.textContent = `${minutes.toString().padStart(2, "0")}:${seconds.toString().padStart(2, "0")}`;

            if (timeLeft <= 0) {
                timerElement.textContent = "D√âBLOQU√â";
                clearInterval(timerInterval);

                // Activer le bouton et changer le texte
                timerButton.classList.remove("disabled");
                timerButton.classList.add("unlocked");
                timerButton.removeAttribute("disabled");
                timerLabel.textContent = "OFFRE DISPONIBLE";

                // Ajouter le lien de redirection
                timerButton.addEventListener("click", () => {
                    window.location.href = "/offre-speciale";
                });
            } else {
                timeLeft--;
            }
        };

        updateTimer(); // Initial display
        const timerInterval = setInterval(updateTimer, 1000);
    }

    // Progress Bar functionality - Chapitres anim√©s
    function initializeProgressBar() {
        const chapters = document.querySelectorAll(".chapter");
        const chapterTimestamps = [
            0, // Intro
            39, // Mon exp√©rience
            138, // La preuve
            322, // Secret #1
            502, // Secret #2
            712, // Secret #3
            1011, // La solution
        ];

        const videoEl = document.getElementById(
            "masterclass-video",
        ) as HTMLVideoElement | null;
        if (!videoEl) return;

        function updateByTime(currentSecond: number) {
            chapterTimestamps.forEach((timestamp, index) => {
                const nextTimestamp =
                    chapterTimestamps[index + 1] ??
                    (videoEl!.duration || Number.POSITIVE_INFINITY);

                if (
                    currentSecond >= timestamp &&
                    currentSecond < nextTimestamp
                ) {
                    chapters[index]?.classList.add("active");
                    chapters[index]?.classList.remove("completed");

                    const chapterDuration = nextTimestamp - timestamp;
                    const chapterElapsed = currentSecond - timestamp;
                    const chapterProgress = Math.min(
                        (chapterElapsed / chapterDuration) * 100,
                        100,
                    );
                    const chapter = chapters[index] as HTMLElement;
                    if (chapter) {
                        chapter.style.setProperty(
                            "--chapter-progress",
                            `${chapterProgress}%`,
                        );
                    }
                } else if (currentSecond >= nextTimestamp) {
                    chapters[index]?.classList.remove("active");
                    chapters[index]?.classList.add("completed");
                    const chapter = chapters[index] as HTMLElement;
                    if (chapter) {
                        chapter.style.setProperty("--chapter-progress", "0%");
                    }
                } else {
                    chapters[index]?.classList.remove("active", "completed");
                    const chapter = chapters[index] as HTMLElement;
                    if (chapter) {
                        chapter.style.setProperty("--chapter-progress", "0%");
                    }
                }
            });
        }

        videoEl.addEventListener("timeupdate", () =>
            updateByTime(videoEl!.currentTime || 0),
        );
        videoEl.addEventListener("loadedmetadata", () => updateByTime(0));
    }

    // Palette coh√©rente avec le style vert n√©on (20 couleurs)
    const authorPalette = [
        "#00dc82", // Accent principal
        "#00f593", // Accent bright
        "#10b981", // Emerald
        "#34d399", // Emerald light
        "#6ee7b7", // Emerald lighter
        "#14b8a6", // Teal
        "#2dd4bf", // Teal light
        "#5eead4", // Teal lighter
        "#22c55e", // Green
        "#4ade80", // Green light
        "#86efac", // Green lighter
        "#06b6d4", // Cyan
        "#22d3ee", // Cyan light
        "#67e8f9", // Cyan lighter
        "#0891b2", // Cyan dark
        "#84cc16", // Lime
        "#a3e635", // Lime light
        "#bef264", // Lime lighter
        "#00b86b", // Accent dark
        "#10b981", // Emerald variant
    ];

    // Renvoie une couleur hex (ou var) selon un hash du nom
    function getAuthorColor(author: string): string {
        // Couleur sp√©ciale pour l'animateur IA
        if (author === "Animateur") return "var(--accent-bright)";

        // Utiliser la couleur accent pour l'utilisateur (son pr√©nom ou "Vous")
        if (author === "Vous" || author === userFirstName)
            return "var(--accent)";

        let hash = 0;
        for (let i = 0; i < author.length; i++) {
            hash = ((hash << 5) - hash + author.charCodeAt(i)) & 0xffffffff;
        }
        const index = Math.abs(hash) % authorPalette.length;
        return authorPalette[index];
    }

    function addChatMessage(
        author: string,
        message: string,
        badge: string | null = null,
    ) {
        if (!chatMessages) return;
        const messageDiv = document.createElement("div");
        messageDiv.className = "chat-message";
        const colorValue = getAuthorColor(author);
        messageDiv.innerHTML = `
			<div class="message-header">
				<div class="message-author" style="color: ${colorValue};">
					${author}
					${badge ? `<span class="message-badge">${badge}</span>` : ""}
				</div>
			</div>
			<div class="message-content">${message}</div>
		`;
        chatMessages.appendChild(messageDiv);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    function addSystemMessage(message: string, isJoin = false) {
        if (!chatMessages) return;
        const messageDiv = document.createElement("div");
        messageDiv.className = `system-message ${isJoin ? "join" : ""}`;
        messageDiv.textContent = message;
        chatMessages.appendChild(messageDiv);
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    // Gestion des onglets
    const publicTab = document.getElementById("publicTab");
    const publicContent = document.getElementById("publicContent");

    // Chat public - juste afficher le message
    const chatForm = document.getElementById("chatForm");
    if (chatForm) {
        chatForm.addEventListener("submit", (e) => {
            e.preventDefault();
            const input = document.getElementById(
                "chatInput",
            ) as HTMLInputElement;
            if (!input) return;
            const message = input.value.trim();
            if (message) {
                // Afficher le message dans le chat public
                addChatMessage(userFirstName, message, null);
                input.value = "";

                // Simulation de r√©ponses des autres participants
                setTimeout(
                    () => {
                        const responses = ["Top!", "+1", "üî•", "Merci", "Cool"];
                        const randomResponse =
                            responses[
                                Math.floor(Math.random() * responses.length)
                            ];
                        const randomName = ["Julie", "Marc", "Sophie", "Alex"][
                            Math.floor(Math.random() * 4)
                        ];
                        addChatMessage(randomName, randomResponse);
                    },
                    2000 + Math.random() * 3000,
                );
            }
        });
    }

    // Viewers count functionality
    function initializeViewerCount() {
        const viewerCountElement = document.getElementById("viewerCount");
        if (!viewerCountElement) return;

        // Valeur initiale al√©atoire entre 32 et 57
        let currentCount = Math.floor(Math.random() * (57 - 32 + 1)) + 32;
        viewerCountElement.textContent = currentCount.toString();

        function updateViewerCount() {
            if (!viewerCountElement) return;

            // G√©n√©rer un nouveau chiffre entre 32 et 57
            const newCount = Math.floor(Math.random() * (57 - 32 + 1)) + 32;

            // Ajouter une classe pour l'animation
            viewerCountElement.classList.add("updating");

            setTimeout(() => {
                if (viewerCountElement) {
                    viewerCountElement.textContent = newCount.toString();
                    viewerCountElement.classList.remove("updating");
                }
            }, 250);
        }

        // Changer le chiffre toutes les 10 √† 20 secondes de fa√ßon al√©atoire
        function scheduleNextUpdate() {
            const delay =
                Math.floor(Math.random() * (20000 - 10000 + 1)) + 10000; // Entre 10 et 20 secondes
            setTimeout(() => {
                updateViewerCount();
                scheduleNextUpdate();
            }, delay);
        }

        scheduleNextUpdate();
    }

    // Floating reactions (disabled)
    function showFloatingReaction(emoji: string) {
        // Disabled for now
    }

    // CTA functions
    function closeCTA() {
        const popup = document.getElementById("ctaPopup");
        if (popup) {
            popup.classList.remove("show");
        }
    }

    function handleCTA() {
        alert("Fonctionnalit√© √† impl√©menter : capture email + t√©l√©chargement");
        closeCTA();
    }

    // Chapter navigation (seek video)
    let allowProgrammaticSeek = false;
    document.querySelectorAll(".chapter").forEach((chapter) => {
        chapter.addEventListener("click", () => {
            const time = parseInt((chapter as HTMLElement).dataset.time || "0");
            if (video) {
                allowProgrammaticSeek = true;
                video.currentTime = Math.max(0, time);
                // Optionally play
                if (video.paused) video.play();
                setTimeout(() => {
                    allowProgrammaticSeek = false;
                }, 150);
            }
        });
    });

    // --- Custom Video Controls ---
    const video = document.getElementById(
        "masterclass-video",
    ) as HTMLVideoElement | null;
    const wrapper = video?.parentElement as HTMLElement | null;
    const bigPlay = document.getElementById("bigPlay");
    const playPause = document.getElementById("playPause");
    const volumeSlider = document.getElementById(
        "volumeSlider",
    ) as HTMLInputElement | null;
    // Progress/time/fullscreen intentionally removed

    function setPlayingState(isPlaying: boolean) {
        if (!wrapper) return;
        if (isPlaying) {
            wrapper.classList.add("is-playing");
            bigPlay?.classList.add("hidden");
        } else {
            wrapper.classList.remove("is-playing");
            bigPlay?.classList.remove("hidden");
        }
    }

    function togglePlay() {
        if (!video) return;
        if (video.paused) {
            video.play();
        } else {
            video.pause();
        }
    }

    // Prevent scrubbing: block seeking and keyboard skip

    if (video) {
        video.removeAttribute("controls");

        let lastTime = 0;

        bigPlay?.addEventListener("click", togglePlay);
        playPause?.addEventListener("click", togglePlay);
        video.addEventListener("click", togglePlay);

        video.addEventListener("play", () => setPlayingState(true));
        video.addEventListener("pause", () => setPlayingState(false));
        video.addEventListener("timeupdate", () => {
            lastTime = video.currentTime || 0;
            // Flush any timed chat messages whose time has passed
            while (
                timedCursor < timedMessages.length &&
                (video.currentTime || 0) + 0.05 >= timedMessages[timedCursor].t
            ) {
                const entry = timedMessages[timedCursor++];
                addChatMessage(entry.a, entry.m, null);
            }
        });
        video.addEventListener("seeking", () => {
            // Autoriser les seeks d√©clench√©s par les chapitres, bloquer le reste
            if (allowProgrammaticSeek) return;
            if (Math.abs((video.currentTime || 0) - lastTime) > 0.5) {
                video.currentTime = lastTime;
            }
        });
        video.addEventListener("loadedmetadata", () => {
            lastTime = 0;
            timedCursor = 0;
        });

        // mute button removed; keep slider-based volume

        volumeSlider?.addEventListener("input", (e) => {
            const value = parseFloat((e.target as HTMLInputElement).value);
            if (!isNaN(value) && video) {
                video.volume = value;
                if (video.volume === 0) {
                    video.muted = true;
                    wrapper?.classList.add("mute-active");
                } else {
                    video.muted = false;
                    wrapper?.classList.remove("mute-active");
                }
            }
        });

        // Block keyboard seeking when video focused
        (video as HTMLVideoElement).addEventListener(
            "keydown",
            (e: KeyboardEvent) => {
                const keysToBlock = [
                    "ArrowLeft",
                    "ArrowRight",
                    "Home",
                    "End",
                    "PageUp",
                    "PageDown",
                    "j",
                    "l",
                ];
                if (keysToBlock.includes(e.key)) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            },
        );
    }
</script>
