const OpenAI = require('openai');

// Configuration OpenAI
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

exports.handler = async (event, context) => {
  console.log('üéØ PERSONALIZED RECOMMENDATIONS FUNCTION CALLED');
  console.log('üì® HTTP Method:', event.httpMethod);

  // Headers CORS
  const headers = {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Headers': 'Content-Type',
    'Access-Control-Allow-Methods': 'POST, OPTIONS',
  };

  // Handle preflight requests
  if (event.httpMethod === 'OPTIONS') {
    return {
      statusCode: 200,
      headers,
      body: '',
    };
  }

  // Only allow POST requests
  if (event.httpMethod !== 'POST') {
    return {
      statusCode: 405,
      headers,
      body: JSON.stringify({ error: 'Method not allowed' }),
    };
  }

  try {
    const { answers, score, userProfile } = JSON.parse(event.body);
    console.log('üìä Score re√ßu:', score);
    console.log('üìù R√©ponses:', answers);

    if (!answers || !Array.isArray(answers)) {
      return {
        statusCode: 400,
        headers,
        body: JSON.stringify({ error: 'R√©ponses requises' }),
      };
    }

    // Pr√©parer le contexte des r√©ponses
    const responseContext = {
      temps: answers[0] || 0, // 0-3
      motivation: answers[1] || 0, // 0-3
      competences: answers[2] || 0, // 0-3
      audace: answers[3] || 0, // 0-3
      perseverance: answers[4] || 0, // 0-3
      score: score || 0
    };

    // Cr√©er le prompt personnalis√©
    const systemPrompt = `Tu es un expert en marketing viral et en cr√©ation de contenu. Tu analyses le profil d'un utilisateur bas√© sur ses r√©ponses √† un calculateur de probabilit√© de succ√®s et tu g√©n√®res un paragraphe de recommandations personnalis√©es qui le m√®ne naturellement vers l'inscription au Syst√®me Viral 100K‚Ñ¢.

CONTEXTE DU PROFIL:
- Temps disponible: ${responseContext.temps}/3
- Motivation: ${responseContext.motivation}/3  
- Comp√©tences digitales: ${responseContext.competences}/3
- Audace: ${responseContext.audace}/3
- Pers√©v√©rance: ${responseContext.perseverance}/3
- Score de probabilit√©: ${responseContext.score}%

G√©n√®re un paragraphe personnalis√© au format JSON:
{
  "recommendation": "Paragraphe personnalis√© qui analyse son profil et le guide vers l'inscription"
}

EXEMPLE DE FORMAT ATTENDU:
"Ton profil r√©v√®le une motivation exceptionnelle qui compense largement ton niveau technique d√©butant. Cette d√©termination est ton plus grand atout pour r√©ussir avec le Syst√®me Viral 100K‚Ñ¢. La formation te donnera exactement les outils techniques dont tu as besoin pour transformer cette motivation en r√©sultats concrets."

Le paragraphe doit:
- Analyser ses forces et faiblesses sp√©cifiques
- Proposer des actions concr√®tes adapt√©es √† son profil
- Cr√©er une connexion √©motionnelle
- Mener naturellement vers l'inscription au Syst√®me Viral 100K‚Ñ¢
- √ätre motivant et encourageant
- Faire 3-4 phrases maximum
- Utiliser un ton personnel et direct
- Utiliser le TUTOIEMENT (tu, ton, ta, tes)
- COMMENCER DIRECTEMENT par l'analyse (pas de "Bonjour", "Salut", "Hello", etc.)
- √ätre une vraie recommandation professionnelle, pas une conversation

R√©ponds UNIQUEMENT en JSON valide.`;

    // Appel √† l'API OpenAI
    const completion = await openai.chat.completions.create({
      model: 'gpt-4o-mini',
      messages: [
        { role: 'system', content: systemPrompt },
        { role: 'user', content: `G√©n√®re des recommandations personnalis√©es pour ce profil: ${JSON.stringify(responseContext)}` }
      ],
      max_tokens: 800,
      temperature: 0.7,
    });

    const response = completion.choices[0]?.message?.content;

    if (!response) {
      throw new Error('No response from OpenAI');
    }

    console.log('‚úÖ Recommandations g√©n√©r√©es');

    // Parser la r√©ponse JSON
    let parsed;
    try {
      parsed = JSON.parse(response.trim());
    } catch (e) {
      console.error('Erreur parsing JSON:', e);
      // Fallback si le JSON n'est pas valide
      parsed = {
        recommendation: "Bas√© sur ton profil, tu as un potentiel r√©el pour r√©ussir avec le Syst√®me Viral 100K‚Ñ¢. Ta motivation et ton engagement sont tes plus grands atouts. La formation te donnera la m√©thode et les outils pour transformer ce potentiel en r√©sultats concrets et durables."
      };
    }

    return {
      statusCode: 200,
      headers,
      body: JSON.stringify({
        recommendation: parsed.recommendation || "Ton profil montre un potentiel int√©ressant pour r√©ussir avec le Syst√®me Viral 100K‚Ñ¢.",
        usage: completion.usage,
      }),
    };

  } catch (error) {
    console.error('Erreur recommandations personnalis√©es:', error);

    // Fallback response
    const fallbackRecommendation = "Bas√© sur ton profil, tu as un potentiel r√©el pour r√©ussir avec le Syst√®me Viral 100K‚Ñ¢. Ta motivation et ton engagement sont tes plus grands atouts. La formation te donnera la m√©thode et les outils pour transformer ce potentiel en r√©sultats concrets et durables.";

    return {
      statusCode: 200,
      headers,
      body: JSON.stringify({
        recommendation: fallbackRecommendation,
        error: true,
      }),
    };
  }
};
